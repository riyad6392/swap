{
    "openapi": "3.0.0",
    "info": {
        "title": "SWAP API Documentation",
        "version": "latest"
    },
    "paths": {
        "/api/admin/approve-user/{user}": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "User Approved by Admin.",
                "operationId": "0e42eb587295fcc741c3745f0189468d",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User approved by admin!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/admin/forget-password": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Forget Password.",
                "operationId": "50cdec8287f8cf40e99044f95687adf2",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "K.r.imtiaz@gmail.com"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Password reset link sent to your email."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/reset-password": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Reset Password.",
                "operationId": "42a746ab8bbd1a44876baf1005409c16",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "K.r.imtiaz@gmail.com"
                    },
                    {
                        "name": "passord",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ex123456@"
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ex123456@"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "sBvotKzWHeXv2I0Mw4cdtm895xtAldugCgWwZxN45nOSK6uwANLcKa0Yz5shAnQx"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Registration successfully done."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/login": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Login Admin",
                "operationId": "ab1e61458f697406ec7cbb410b41a51c",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "k.r.imtiaz@gmail.com"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "password"
                    },
                    {
                        "name": "remember",
                        "in": "query",
                        "description": "This value must be boolean 0 or 1 not true/false.",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "false"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "json",
                                            "example": {
                                                "id": 2,
                                                "name": "Imtiaz Ur Rahman Khan",
                                                "email": "k.r.imtiaz@gmail.com",
                                                "email_verified_at": null,
                                                "created_at": "2022-11-02T12:25:16.000000Z",
                                                "updated_at": "2022-11-02T12:25:16.000000Z"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "number",
                                            "example": "86400"
                                        },
                                        "access_token": {
                                            "type": "token",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiOTAwNDU1YTJmZGY4YzQ3YmQ1ODQxODMwZDQzN2JhNWM4NDJhZDdlNTAwMDNiODBlNjJhZjFlYTJhZDhiZTAxY2FkMjdiOWIxZjkxZjkwZjMiLCJpYXQiOjE2Njc0MzQ1NTYuMTQ0MTk5LCJuYmYiOjE2Njc0MzQ1NTYuMTQ0MjAyLCJleHAiOjE2OTg5NzA1NTYuMDI2NDg3LCJzdWIiOiIyIiwic2NvcGVzIjpbXX0.LzRYUmOk7uCScSwi_RTR4nuKQ3tOeKiGAjM7PxvQUW9Fs93K3HqIxvIIBAnniTc8ee1plfy7qikxEsfOsJLaMjm7c2hmFyy4hhRxYJAxc0lAnA6G7i0Ue-kFeivs7cSzwEzvGRhnLgtv4J7vYbvJA8yh9KrvqvsB19_Y-RPzng6d4ZKR-Ij6nF5GfN-QCNP4nyqRfiPsuQVMJuP9KiWyacvpr7XUX2wjcY8xQtxQBfvaSNehujhX8B-0f0CwGpOBTi3fDdpvZbeqa9s7ZBDb9bSWahZ90XIvpls5bCnt7zuhXGte9HKeFulrISeCj-onCnGvqzFsxDESdCDVU0MC2hbXwHHLgQbBWhG0EM2u86VgdAqPktNsAK-4l7_zCRHuGMnT_qpY4He1e-MvECDQ8wfGtunKfizwTzxJ2VrsFPkWl90fldcmfTt0Mbd_HJfPCw4XViUYBQAPgSUKxKsuPN5RNott4zzCTtWJKA8Ot9L05H4zQQB6yWrj8juPUA3qBVO5jDC12SM32mrVwUTWXEfZa8EDUQ2MQytPR-uflfkTdYVPYvoRQPoEAAmD1oz4_kas0F23xSza6K8mwA3pT1Znqjbz4fDDrcoxQDENsPwTqfuZBWFfz5OXOh6f_5NO41g_qOWEdzwGLaST9p-8ALUC8oExDIfQq2EvM3Cqh-M"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Credientials does not match"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/logout": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Admin logout.",
                "operationId": "bf5055bfc3c34b3ab4a011aebdaca0ff",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully logout!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/admin/refresh-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh token",
                "operationId": "472ea5b090be6012868fbf4093f99424",
                "parameters": [
                    {
                        "name": "refresh_token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "number",
                                            "example": "86400"
                                        },
                                        "access_token": {
                                            "type": "token",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiOTAwNDU1YTJmZGY4YzQ3YmQ1ODQxODMwZDQzN2JhNWM4NDJhZDdlNTAwMDNiODBlNjJhZjFlYTJhZDhiZTAxY2FkMjdiOWIxZjkxZjkwZjMiLCJpYXQiOjE2Njc0MzQ1NTYuMTQ0MTk5LCJuYmYiOjE2Njc0MzQ1NTYuMTQ0MjAyLCJleHAiOjE2OTg5NzA1NTYuMDI2NDg3LCJzdWIiOiIyIiwic2NvcGVzIjpbXX0.LzRYUmOk7uCScSwi_RTR4nuKQ3tOeKiGAjM7PxvQUW9Fs93K3HqIxvIIBAnniTc8ee1plfy7qikxEsfOsJLaMjm7c2hmFyy4hhRxYJAxc0lAnA6G7i0Ue-kFeivs7cSzwEzvGRhnLgtv4J7vYbvJA8yh9KrvqvsB19_Y-RPzng6d4ZKR-Ij6nF5GfN-QCNP4nyqRfiPsuQVMJuP9KiWyacvpr7XUX2wjcY8xQtxQBfvaSNehujhX8B-0f0CwGpOBTi3fDdpvZbeqa9s7ZBDb9bSWahZ90XIvpls5bCnt7zuhXGte9HKeFulrISeCj-onCnGvqzFsxDESdCDVU0MC2hbXwHHLgQbBWhG0EM2u86VgdAqPktNsAK-4l7_zCRHuGMnT_qpY4He1e-MvECDQ8wfGtunKfizwTzxJ2VrsFPkWl90fldcmfTt0Mbd_HJfPCw4XViUYBQAPgSUKxKsuPN5RNott4zzCTtWJKA8Ot9L05H4zQQB6yWrj8juPUA3qBVO5jDC12SM32mrVwUTWXEfZa8EDUQ2MQytPR-uflfkTdYVPYvoRQPoEAAmD1oz4_kas0F23xSza6K8mwA3pT1Znqjbz4fDDrcoxQDENsPwTqfuZBWFfz5OXOh6f_5NO41g_qOWEdzwGLaST9p-8ALUC8oExDIfQq2EvM3Cqh-M"
                                        },
                                        "refresh_token": {
                                            "type": "token",
                                            "example": "def502000a6adbde3b00f2f16b60fe587d0fb88c2b1736cf26d562c433728e5c451cee8ddb8eb262e088c328f1748907301b94301afdaa4ff6dc714998a29d794ba65048c13a7859d9a9cb527c329e134ff7ab98b144f663b36c4f70866725dee75e3099ade9103b8c880f21010aa01f9b8ab2c0eada7561edb4da28c4c322e8a60ce3119776749a83ccd7560a995e1ea2614da33991403dd7ac1131fa5447fbed021b309176a02bece09b06a8bf8888a4bb84aef1ca9a23efaf4a06b57f33233d83aae99b1ee734f40830be2d9d57e5432c1ecaa4bd98fa31f30b57bbcd91dd79378c74f54616bdb0d0cfe73d996dbd0bf8602fa2056f223c5d93fe42806f327dc68af4f1a300fac0293eb5df83e969defb75a5204004a0d54008e07c94586d5c74f6773c94d0986ac151dd7f0f97ff8a35df5b044d59c8710e28e44f905639686698265a11003f471299c97e94a7efea30a4cc064f908c8ad147f5ad2a19f6c0e317e5"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Invalid token."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/admin/register": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Register a new User.",
                "operationId": "5131a1e6bfc567b66f91427fd7100e22",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "K.r.imtiaz@gmail.com"
                    },
                    {
                        "name": "passord",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ex123456@"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Registration successfully done."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/brand": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Brand List.",
                "operationId": "169e0a19381f92cfca6efbfb6240dca2",
                "parameters": [
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "1"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "T-shirt"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brand"
                ],
                "summary": "Create a new Brand.",
                "operationId": "3feeb2180f5adef5877b8d96d55a141b",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Brand created successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/brand/{id}": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Brand Show.",
                "operationId": "63f192ced3f2dc97cd628847bda18f3d",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Brand"
                ],
                "summary": "Update Brand",
                "operationId": "e2531c74de24d4dec75a889e3df72807",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Brand updated successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Brand"
                ],
                "summary": "Delete Brand",
                "operationId": "127e1913d069853f33d5ccae6957bc44",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Brand deleted successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/category": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Category List.",
                "operationId": "032226775eec01bbe2f479499a953a7b",
                "parameters": [
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create a new Category.",
                "operationId": "788a7d6c1bfd024cde034fac65538af2",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Category created successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/category/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Category Show.",
                "operationId": "f565218159facf26b117f1ecb4ef3285",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": {
                                                "id": 1,
                                                "name": "Category 1",
                                                "description": "Description",
                                                "created_at": "2022-11-02T12:25:16.000000Z",
                                                "updated_at": "2022-11-02T12:25:16.000000Z"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update Category.",
                "operationId": "5055bf54c0d1e74e6533c1418e3748dd",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Category updated successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Remove the specified Category from storage.",
                "operationId": "1f56b6f2030ddc075e66130fb72609f5",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Category deleted successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/color": {
            "get": {
                "tags": [
                    "Color"
                ],
                "summary": "Color List.",
                "operationId": "77e09b1083eb1d2fdec781893020b335",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "red"
                    },
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Color"
                ],
                "summary": "Create a new Brand.",
                "operationId": "7052a1d7a659e851675be8e9267fd3c6",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    },
                    {
                        "name": "color_code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "#fff"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Color created successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/color/{id}": {
            "get": {
                "tags": [
                    "Color"
                ],
                "summary": "Color Show.",
                "operationId": "53209f2b5d28fe73b6f55ab52c161a86",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Color"
                ],
                "summary": "Update Color",
                "operationId": "f973f7ba2211057879d6c122ddb1e53e",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    },
                    {
                        "name": "color_code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "#fff"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Brand updated successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Color"
                ],
                "summary": "Delete Color",
                "operationId": "de30392e4e7422a5823ffcfdff46de47",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Color deleted successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/size": {
            "get": {
                "tags": [
                    "Size"
                ],
                "summary": "Size List.",
                "operationId": "d0731cd822e970ec778f4897692f592c",
                "parameters": [
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "This is just example description."
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Size"
                ],
                "summary": "Create a new Color.",
                "operationId": "f2919496a4e0d53dd72ac7dfa9bd3de5",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "This is just example description."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Brand created successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/size/{id}": {
            "get": {
                "tags": [
                    "Size"
                ],
                "summary": "Size Show.",
                "operationId": "f2a3284fe841dbba2ead52958cb42c87",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Size"
                ],
                "summary": "Update Size",
                "operationId": "0f5fc4c07a4e0822682399de3e051a5c",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "This is just example description."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Size updated successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Size"
                ],
                "summary": "Delete Size",
                "operationId": "1ecd25c90ee88589d85aa7b30167b3c8",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Brand deleted successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/forget-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Forget Password.",
                "operationId": "48669e1f3eb9830c74ece9f77056c1a9",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "K.r.imtiaz@gmail.com"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Password reset link sent to your email."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset Password.",
                "operationId": "a6df91a137b56d9b58535ff5e0261eea",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "K.r.imtiaz@gmail.com"
                    },
                    {
                        "name": "passord",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ex123456@"
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ex123456@"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "sBvotKzWHeXv2I0Mw4cdtm895xtAldugCgWwZxN45nOSK6uwANLcKa0Yz5shAnQx"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Registration successfully done."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a user",
                "description": "Login User\n\nThis method supports authenticating a user by their email and password.\nOptionally, a 'remember' flag can be set to maintain the session persistence.",
                "operationId": "loginUser",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User email address",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        },
                        "example": "k.r.imtiaz@gmail.com"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User password",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "password"
                        },
                        "example": "password"
                    },
                    {
                        "name": "remember",
                        "in": "query",
                        "description": "remember option",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "example": {
                                                "id": 2,
                                                "name": "Imtiaz Ur Rahman Khan",
                                                "email": "k.r.imtiaz@gmail.com",
                                                "email_verified_at": null,
                                                "created_at": "2022-11-02T12:25:16.000000Z",
                                                "updated_at": "2022-11-02T12:25:16.000000Z"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": "1"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 86400
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiw..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid user input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "0"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "message": "Credentials do not match"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication failed"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout.",
                "operationId": "5e29d25372d83a1ff5c3165a43f3302d",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully logout!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/refresh-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh token",
                "operationId": "3dc430ddfdda64350e392c89a3e39b6a",
                "parameters": [
                    {
                        "name": "refresh_token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "number",
                                            "example": "86400"
                                        },
                                        "access_token": {
                                            "type": "token",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiOTAwNDU1YTJmZGY4YzQ3YmQ1ODQxODMwZDQzN2JhNWM4NDJhZDdlNTAwMDNiODBlNjJhZjFlYTJhZDhiZTAxY2FkMjdiOWIxZjkxZjkwZjMiLCJpYXQiOjE2Njc0MzQ1NTYuMTQ0MTk5LCJuYmYiOjE2Njc0MzQ1NTYuMTQ0MjAyLCJleHAiOjE2OTg5NzA1NTYuMDI2NDg3LCJzdWIiOiIyIiwic2NvcGVzIjpbXX0.LzRYUmOk7uCScSwi_RTR4nuKQ3tOeKiGAjM7PxvQUW9Fs93K3HqIxvIIBAnniTc8ee1plfy7qikxEsfOsJLaMjm7c2hmFyy4hhRxYJAxc0lAnA6G7i0Ue-kFeivs7cSzwEzvGRhnLgtv4J7vYbvJA8yh9KrvqvsB19_Y-RPzng6d4ZKR-Ij6nF5GfN-QCNP4nyqRfiPsuQVMJuP9KiWyacvpr7XUX2wjcY8xQtxQBfvaSNehujhX8B-0f0CwGpOBTi3fDdpvZbeqa9s7ZBDb9bSWahZ90XIvpls5bCnt7zuhXGte9HKeFulrISeCj-onCnGvqzFsxDESdCDVU0MC2hbXwHHLgQbBWhG0EM2u86VgdAqPktNsAK-4l7_zCRHuGMnT_qpY4He1e-MvECDQ8wfGtunKfizwTzxJ2VrsFPkWl90fldcmfTt0Mbd_HJfPCw4XViUYBQAPgSUKxKsuPN5RNott4zzCTtWJKA8Ot9L05H4zQQB6yWrj8juPUA3qBVO5jDC12SM32mrVwUTWXEfZa8EDUQ2MQytPR-uflfkTdYVPYvoRQPoEAAmD1oz4_kas0F23xSza6K8mwA3pT1Znqjbz4fDDrcoxQDENsPwTqfuZBWFfz5OXOh6f_5NO41g_qOWEdzwGLaST9p-8ALUC8oExDIfQq2EvM3Cqh-M"
                                        },
                                        "refresh_token": {
                                            "type": "token",
                                            "example": "def502000a6adbde3b00f2f16b60fe587d0fb88c2b1736cf26d562c433728e5c451cee8ddb8eb262e088c328f1748907301b94301afdaa4ff6dc714998a29d794ba65048c13a7859d9a9cb527c329e134ff7ab98b144f663b36c4f70866725dee75e3099ade9103b8c880f21010aa01f9b8ab2c0eada7561edb4da28c4c322e8a60ce3119776749a83ccd7560a995e1ea2614da33991403dd7ac1131fa5447fbed021b309176a02bece09b06a8bf8888a4bb84aef1ca9a23efaf4a06b57f33233d83aae99b1ee734f40830be2d9d57e5432c1ecaa4bd98fa31f30b57bbcd91dd79378c74f54616bdb0d0cfe73d996dbd0bf8602fa2056f223c5d93fe42806f327dc68af4f1a300fac0293eb5df83e969defb75a5204004a0d54008e07c94586d5c74f6773c94d0986ac151dd7f0f97ff8a35df5b044d59c8710e28e44f905639686698265a11003f471299c97e94a7efea30a4cc064f908c8ad147f5ad2a19f6c0e317e5"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Invalid token."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new User.",
                "operationId": "c89cf690a73d96f46d01fe8798530651",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "K.r.imtiaz@gmail.com"
                    },
                    {
                        "name": "passord",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ex123456@"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Registration successfully done."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/prepare-conversation": {
            "post": {
                "tags": [
                    "Message"
                ],
                "summary": "Create a new Conversation.",
                "operationId": "ee15c083d271a40443d322e88efffb4c",
                "parameters": [
                    {
                        "name": "reciver_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    },
                    {
                        "name": "sender_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    },
                    {
                        "name": "swap_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "2"
                    },
                    {
                        "name": "conversation_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "private"
                    },
                    {
                        "name": "conversation_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "2"
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "text"
                        },
                        "example": "2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Conversation created successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/send-messages": {
            "post": {
                "tags": [
                    "Message"
                ],
                "summary": "Send Message.",
                "operationId": "a1008c0a703a3d6b77cb3ae76fa2af80",
                "parameters": [
                    {
                        "name": "reciver_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    },
                    {
                        "name": "sender_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    },
                    {
                        "name": "swap_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "2"
                    },
                    {
                        "name": "conversation_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "private"
                    },
                    {
                        "name": "conversation_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "2"
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "text"
                        },
                        "example": "2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Message Sent successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/message": {
            "get": {
                "tags": [
                    "Message"
                ],
                "summary": "Message List.",
                "operationId": "a7c6abc72ab4d49342f875a1643ecea4",
                "parameters": [
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/update-message/{id}": {
            "put": {
                "tags": [
                    "Message"
                ],
                "summary": "Update Message.",
                "operationId": "75149dd526e1c391e4c2f32887c61cb8",
                "parameters": [
                    {
                        "name": "sender_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "text"
                        },
                        "example": "This is a message."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Message Sent successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/delete-message/{id}": {
            "delete": {
                "tags": [
                    "Message"
                ],
                "summary": "Delete Message.",
                "operationId": "1e31c4d24a1bc7cd30cc0f64ae739a43",
                "parameters": [
                    {
                        "name": "sender_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Message Delete successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Notifications List.",
                "operationId": "911565ad9aff9ba7eded3f189509e578",
                "parameters": [
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/notification-show/{id}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "A Single Notification show.",
                "operationId": "952d857138ddd1c3ade616dd295237b1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "true": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "All notifications marked as read."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/mark-as-read": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark As Read.",
                "operationId": "cc8e407065bccbecaafb035bc5c223d7",
                "parameters": [
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "Notification id",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "required": [
                                    "path"
                                ],
                                "properties": {
                                    "path": {
                                        "type": "string",
                                        "example": "[1,2,3]"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "true": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "All notifications marked as read."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/mark-as-unread": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark As Unread.",
                "operationId": "701e5db13a1ee7d457e118a540e8cacc",
                "parameters": [
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "Notification id",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "required": [
                                    "path"
                                ],
                                "properties": {
                                    "path": {
                                        "type": "string",
                                        "example": "[1,2,3]"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "true": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "All notifications marked as unread."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/payment-method": {
            "post": {
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Store a new payment method",
                "description": "Store a newly created payment method.",
                "operationId": "storePaymentMethod",
                "parameters": [
                    {
                        "name": "method_name",
                        "in": "query",
                        "description": "Name of the payment method",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Credit Card"
                        }
                    },
                    {
                        "name": "master_key",
                        "in": "query",
                        "description": "Master key",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "123456789"
                        }
                    },
                    {
                        "name": "master_value",
                        "in": "query",
                        "description": "Master value",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "123"
                        }
                    },
                    {
                        "name": "stripe_payment_method_id",
                        "in": "query",
                        "description": "Stripe payment method ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "pm_123456789"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Status of the payment method",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "active",
                            "enum": [
                                "active",
                                "inactive"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Payment method created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "method_name": {
                                                    "type": "string",
                                                    "example": "Credit Card"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "master_key": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                },
                                                "master_value": {
                                                    "type": "string",
                                                    "example": "123"
                                                },
                                                "stripe_payment_method_id": {
                                                    "type": "string",
                                                    "example": "pm_123456789"
                                                },
                                                "is_active": {
                                                    "type": "string",
                                                    "example": "active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error occurred while storing payment method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "properties": {
                                                "message": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Error message goes here"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/update-payment-method": {
            "put": {
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Update an existing payment method",
                "description": "Update the specified payment method.",
                "operationId": "updatePaymentMethod",
                "parameters": [
                    {
                        "name": "stripe_payment_method_id",
                        "in": "query",
                        "description": "Stripe payment method ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "pm_123456789"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment method updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": "Payment method updated successfully."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error occurred while updating payment method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "properties": {
                                                "message": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Error message goes here"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/delete-payment-method/{payment_method_id}": {
            "delete": {
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Delete a payment method",
                "description": "Delete the specified payment method.",
                "operationId": "deletePaymentMethod",
                "responses": {
                    "200": {
                        "description": "Payment method deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment method deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error occurred while deleting payment method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "properties": {
                                                "message": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Error message goes here"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/default-payment-method/{id}": {
            "get": {
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Delete a payment method",
                "description": "Change default payment method.",
                "operationId": "5819d539280bf2f81fd35fec23a60927",
                "responses": {
                    "200": {
                        "description": "Payment method change successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment method change successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error occurred while change payment method",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "properties": {
                                                "message": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Error message goes here"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/plan": {
            "get": {
                "tags": [
                    "Plan"
                ],
                "summary": "Plan List.",
                "operationId": "294c28d04f1cf5a756e7a8e2cfbc89df",
                "parameters": [
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Plan"
                ],
                "summary": "Create a new Plan.",
                "operationId": "3c0ee287f14bb7c839b9d4793dc1f323",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "This is just description"
                    },
                    {
                        "name": "short_description",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "This is just description"
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "100"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "1"
                    },
                    {
                        "name": "plan_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "enum"
                        },
                        "example": "basic/premium"
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "USD"
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "month"
                    },
                    {
                        "name": "interval_duration",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    },
                    {
                        "name": "plan_details[0][feature]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Feature"
                    },
                    {
                        "name": "plan_details[0][value]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Value"
                    },
                    {
                        "name": "plan_details[0][features_count]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Category created successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/plan/{id}": {
            "get": {
                "tags": [
                    "Plan"
                ],
                "summary": "Retrieve a specific plan.",
                "operationId": "45bfacdd2a6118139d8ebcce12e2a3b0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get singe plan by plan id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Plan retrieved successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Plan not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Plan"
                ],
                "summary": "Update this plan.",
                "operationId": "6603194848979a9c2563867097783704",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Doel Rana"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "This is just description"
                    },
                    {
                        "name": "short_description",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "This is just short description"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "1"
                    },
                    {
                        "name": "plan_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "enum"
                        },
                        "example": "basic/premium"
                    },
                    {
                        "name": "plan_details[0][feature]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Feature"
                    },
                    {
                        "name": "plan_details[0][value]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Value"
                    },
                    {
                        "name": "plan_details[0][features_count]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Category created successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Plan"
                ],
                "summary": "Remove the plan and related data.",
                "operationId": "86d9de8ed681fe5f4d3f5be01a090c25",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the plan to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Plan and related data deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Plan not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/plan-subscription": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Create a new Subscription.",
                "operationId": "c0eddc4e5d3d41bfe56a36929fb54e60",
                "parameters": [
                    {
                        "name": "plan_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "100"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Imtiaz Ur Rehman"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Khan"
                    },
                    {
                        "name": "business_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Business"
                    },
                    {
                        "name": "business_address",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Dhaka, Bangladesh"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Category created successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Please add payment method first!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/cancel-subscription/{id}": {
            "delete": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Cancel the subscription.",
                "description": "provide the Subscription id to cancel the subscription",
                "operationId": "8107b6e7bafcc4f42697c3d1d78ca759",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subscription deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Plan not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/inventory": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Product List.",
                "operationId": "02191ace01f4f2e4a399a85886836a49",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Product 1"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "category_id[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    },
                    {
                        "name": "size_id[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    },
                    {
                        "name": "brand_id[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    },
                    {
                        "name": "color_id[]",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    },
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/product": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Create a new product with variations",
                "description": "Product Created.",
                "operationId": "1d0b0d8724685b7b8f9d87f403bfc4df",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the product",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Product Name"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Description of the product",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Product Description"
                        }
                    },
                    {
                        "name": "product_image",
                        "in": "query",
                        "description": "Images of the product",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "required": [
                                    "path"
                                ],
                                "properties": {
                                    "path": {
                                        "type": "string",
                                        "example": "updated_product_image1.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    {
                        "name": "variations[0][size_id]",
                        "in": "query",
                        "description": "Size of the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "XL"
                        }
                    },
                    {
                        "name": "variations[0][color_id]",
                        "in": "query",
                        "description": "Color of the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Red"
                        }
                    },
                    {
                        "name": "variations[0][price]",
                        "in": "query",
                        "description": "Price of the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "decimal",
                            "example": 19.99
                        }
                    },
                    {
                        "name": "variations[0][stock]",
                        "in": "query",
                        "description": "Stock of the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 100
                        }
                    },
                    {
                        "name": "variations[0][discount]",
                        "in": "query",
                        "description": "Discount of the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 10.5
                        }
                    },
                    {
                        "name": "variations[0][quantity]",
                        "in": "query",
                        "description": "Quantity of the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 50
                        }
                    },
                    {
                        "name": "variations[0][discount_type]",
                        "in": "query",
                        "description": "Discount type of the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "percentage"
                        }
                    },
                    {
                        "name": "variations[0][discount_start_date]",
                        "in": "query",
                        "description": "Start date of the discount for the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-03-15"
                        }
                    },
                    {
                        "name": "variations[0][discount_end_date]",
                        "in": "query",
                        "description": "End date of the discount for the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-03-20"
                        }
                    },
                    {
                        "name": "variations[0][varient_images]",
                        "in": "query",
                        "description": "Images of the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "required": [
                                    "path"
                                ],
                                "properties": {
                                    "path": {
                                        "type": "string",
                                        "example": "image1.jpg"
                                    }
                                },
                                "type": "object"
                            },
                            "example": [
                                {
                                    "path": "image1.jpg"
                                },
                                {
                                    "path": "image2.jpg"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": "Product Created successfully."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": "Some this is wrong"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product/{id}": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Retrieve a specific product.",
                "operationId": "2768d88590e39a7ded1d0032e64dded7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get singe product by product id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Product Created successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Update an existing product with variations",
                "description": "Update Product.",
                "operationId": "d3467c795490afbb49680821c9bd6b0d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the product",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Updated Product Name"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Description of the product",
                        "schema": {
                            "type": "string",
                            "example": "Updated Product Description"
                        }
                    },
                    {
                        "name": "variations[0][size]",
                        "in": "query",
                        "description": "Size of the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "M"
                        }
                    },
                    {
                        "name": "variations[0][color]",
                        "in": "query",
                        "description": "Color of the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Blue"
                        }
                    },
                    {
                        "name": "variations[0][unit_price]",
                        "in": "query",
                        "description": "Price of the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "decimal",
                            "example": 24.99
                        }
                    },
                    {
                        "name": "variations[0][stock]",
                        "in": "query",
                        "description": "Stock of the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 80
                        }
                    },
                    {
                        "name": "variations[0][discount]",
                        "in": "query",
                        "description": "Discount of the product variation at index 0",
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 10.5
                        }
                    },
                    {
                        "name": "variations[0][quantity]",
                        "in": "query",
                        "description": "Quantity of the product variation at index 0",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 30
                        }
                    },
                    {
                        "name": "variations[0][discount_type]",
                        "in": "query",
                        "description": "Discount type of the product variation at index 0",
                        "schema": {
                            "type": "string",
                            "example": "percentage"
                        }
                    },
                    {
                        "name": "variations[0][discount_start_date]",
                        "in": "query",
                        "description": "Start date of the discount for the product variation at index 0",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-03-15"
                        }
                    },
                    {
                        "name": "variations[0][discount_end_date]",
                        "in": "query",
                        "description": "End date of the discount for the product variation at index 0",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-03-20"
                        }
                    },
                    {
                        "name": "variations[0][varient_images][]",
                        "in": "query",
                        "description": "Images of the product variation at index 0",
                        "schema": {
                            "type": "string",
                            "example": "[1,3]"
                        }
                    },
                    {
                        "name": "deleted_product_image_ids[]",
                        "in": "query",
                        "description": "IDs of the images to be deleted",
                        "schema": {
                            "type": "string",
                            "example": "[1,3]"
                        }
                    },
                    {
                        "name": "deleted_product_variation_image_ids[]",
                        "in": "query",
                        "description": "IDs of the images to be deleted",
                        "schema": {
                            "type": "string",
                            "example": "[1,3]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": "Product Updated successfully."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": "Some data is invalid"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": "Product not found"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Remove the specified resource from storage.",
                "operationId": "c830155516bad1f72b0081160edeb2ac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product and related data deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/change-product-status/{id}": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Change status to a product.",
                "operationId": "d40ad521450e99ffc0da2630fd480c05",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to change the status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product status updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/delete-product-variation}": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Delete Product variation to a product.",
                "operationId": "5d62cd52abd1ea7a29e8aa7ed70b8d60",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "product_variation_id",
                        "in": "path",
                        "description": "ID of the product variation",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product status updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ratings": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Rating List.",
                "operationId": "ad64604c65f061cafbb78a893548ad91",
                "parameters": [
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Create a new rating",
                "description": "Create a new rating for a user.",
                "operationId": "e876bdaebd2a715619d9d19e8be09398",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "ID of the user who is rating",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "rated_id",
                        "in": "query",
                        "description": "ID of the user being rated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Rating value assigned to the user (floating-point number)",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "maximum": 5,
                            "minimum": 0.5,
                            "example": "3.5"
                        }
                    },
                    {
                        "name": "comments",
                        "in": "query",
                        "description": "Optional comments about the rating",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Great user!"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Rating created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "rated_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "rating": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 3.5
                                                },
                                                "comments": {
                                                    "type": "string",
                                                    "example": "Great user!"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/ratings/{id}": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Retrieve a specific rating.",
                "operationId": "912afb9dee8f055dde51b69b3f5057d8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get singe rating by rating id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Rating retrived successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rating not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Rating updated successfully",
                "description": "Updated a rating for a user.",
                "operationId": "ad9719d294e6307635669e7607d83650",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get singe rating by rating id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "ID of the user who is rating",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "rated_id",
                        "in": "query",
                        "description": "ID of the user being rated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Rating value assigned to the user (floating-point number)",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "maximum": 5,
                            "minimum": 0.5,
                            "example": "3.5"
                        }
                    },
                    {
                        "name": "comments",
                        "in": "query",
                        "description": "Optional comments about the rating",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Great user!"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Rating updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "rated_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "rating": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 4.5
                                                },
                                                "comments": {
                                                    "type": "string",
                                                    "example": "Great user!"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Remove the specified rating from storage.",
                "operationId": "9274dcb1681f116bde72d0ed39089fbf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the rating to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Rating data deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Rating not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/ratings/that-rated-me": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get ratings that were given to the authenticated user",
                "operationId": "585b87f319ee84fd2b9dda389e6dafed",
                "responses": {
                    "200": {
                        "description": "List of ratings that were given to the authenticated user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "user_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "rated_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "rating": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 4
                                            },
                                            "comments": {
                                                "type": "string",
                                                "example": "Great service!"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-03-12 15:30:00"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-03-12 15:30:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ratings/i-rated": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get ratings that the authenticated user has given",
                "operationId": "6847b5a7307e5cfd30a7286e9d0ae506",
                "responses": {
                    "200": {
                        "description": "List of ratings given by the authenticated user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "user_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "rated_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "rating": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 4.5
                                            },
                                            "comments": {
                                                "type": "string",
                                                "example": "Good experience!"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-03-12 15:30:00"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-03-12 15:30:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/swap": {
            "get": {
                "tags": [
                    "Swaps"
                ],
                "summary": "Swap List.",
                "operationId": "553ef66146bdc1744b27c08d985c38f5",
                "parameters": [
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/swap/{id}": {
            "get": {
                "tags": [
                    "Swaps"
                ],
                "summary": "Get swap by ID.",
                "operationId": "4ffa38f9c9085dca39056d5700f35baa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get singe swap by swap id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "data": {
                                            "type": "json",
                                            "example": {
                                                "uid": "swp-547689"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Swap not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Swap not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Swaps"
                ],
                "summary": "Create a new swap",
                "description": "Edit Swap.",
                "operationId": "fc40f246522718458d0812709c728a69",
                "parameters": [
                    {
                        "name": "define_type",
                        "in": "query",
                        "description": "Exchanged Wholesale Amount",
                        "required": true,
                        "schema": {
                            "type": "enum",
                            "example": "exchange_product | request_product"
                        }
                    },
                    {
                        "name": "exchange_product[0][product_id]",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "exchange_product[0][variation_id]",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "exchange_product[0][variation_size_id]",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "exchange_product[0][variation_color_id]",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "exchange_product[0][variation_quantity]",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "define_type",
                        "in": "query",
                        "description": "Exchanged Wholesale Amount",
                        "required": true,
                        "schema": {
                            "type": "enum",
                            "example": "exchange_product | request_product"
                        }
                    },
                    {
                        "name": "request_product[0][product_id]",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "request_product[0][variation_id]",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "request_product[0][variation_size]",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "request_product[0][variation_color]",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "request_product[0][variation_quantity]",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Swap created successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Swaps"
                ],
                "summary": "Delete Swap.",
                "operationId": "e8f53adca2752aabffa3b885d98b589a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Delete a swap by ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Swap and related data deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Swap not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/swap-approve/{id}": {
            "get": {
                "tags": [
                    "Swaps"
                ],
                "summary": "Swap Approve by user.",
                "operationId": "4825c2e186546493c041a2c7fbe88c14",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Approve swap by ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Get swap details."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Swap not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Swap not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/swap-decline/{id}": {
            "get": {
                "tags": [
                    "Swaps"
                ],
                "summary": "Swap Decline by user.",
                "operationId": "8b9c697d093fe8a28f1f590786b1b749",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Decline swap by ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Get swap details."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Swap not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Swap not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/swap-exchange-details": {
            "get": {
                "tags": [
                    "Swap Exchange Details"
                ],
                "summary": "Swap Exchange Details List.",
                "operationId": "6fd198064c7eb6ffcf356a06f1e9f6b2",
                "parameters": [
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Swap Exchange Details"
                ],
                "summary": "Create a new swap exchange details",
                "description": "Create Swap Exchange Details.",
                "operationId": "0931351683a1c5c4a49ab616e626de0d",
                "parameters": [
                    {
                        "name": "swap_id",
                        "in": "query",
                        "description": "Swap ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    },
                    {
                        "name": "product_variation_id",
                        "in": "query",
                        "description": "Product Variation ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 4
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Quantity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "unit_price",
                        "in": "query",
                        "description": "Unit Price",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 10.5
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 52.5
                        }
                    },
                    {
                        "name": "commission",
                        "in": "query",
                        "description": "Commission",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 5.25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Swap Exchange Details created successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/swap-exchange-details/{id}": {
            "get": {
                "tags": [
                    "Swap Exchange Details"
                ],
                "summary": "Retrieve a specific swap exchange details.",
                "operationId": "6e82f2aff34cf580f0153750734e4ba7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get single swap by swap exchange details id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Get swap exchange details."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Swap exchange details not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Swap exchange details not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Swap Exchange Details"
                ],
                "summary": "Update swap exchange details",
                "description": "Update Swap Exchange Details.",
                "operationId": "24981eaaae97806ef9c4755eda0a8298",
                "parameters": [
                    {
                        "name": "swap_id",
                        "in": "query",
                        "description": "Swap ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    },
                    {
                        "name": "product_variation_id",
                        "in": "query",
                        "description": "Product Variation ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 4
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Quantity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "unit_price",
                        "in": "query",
                        "description": "Unit Price",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 10.5
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 52.5
                        }
                    },
                    {
                        "name": "commission",
                        "in": "query",
                        "description": "Commission",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 5.25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Swap Exchange Details updated successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Swap Exchange Details"
                ],
                "summary": "Delete Swap Exchange Details.",
                "operationId": "db4f3839eb4090ca8844d32d2a752ae6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Delete a swap exchange details by ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Swap exchage details and related data deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Swap exchange details not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/swap-exchange-details/{id}/edit": {
            "get": {
                "tags": [
                    "Swap Exchange Details"
                ],
                "summary": "Retrieve a specific swap exchange details.",
                "operationId": "17dddd7727bf037ff9ab8a3b7d774224",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get single swap by swap exchange details id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Get swap exchange details."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Swap exchange details not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Swap exchange details not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/swap-initiate": {
            "post": {
                "tags": [
                    "Swaps Initiate"
                ],
                "summary": "Create a new swap",
                "description": "Create Swap.",
                "operationId": "b91d41b76610ff77161d7c2488f14e00",
                "parameters": [
                    {
                        "name": "exchanged_user_id",
                        "in": "query",
                        "description": "Exchanged User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    },
                    {
                        "name": "products[0][product_id]",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "products[0][1]"
                        }
                    },
                    {
                        "name": "products[0][product_variation_id]",
                        "in": "query",
                        "description": "Product Variation ID",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "integer",
                            "example": "products[0][product_variation_id]"
                        }
                    },
                    {
                        "name": "products[0][quantity]",
                        "in": "query",
                        "description": "Product quantity",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "integer",
                            "example": "products[0][quantity]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Swap created successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/swap/destroy/{id}": {
            "delete": {
                "tags": [
                    "Swaps Initiate"
                ],
                "summary": "Swap Request accepted by message request",
                "description": "Accept Swap.",
                "operationId": "e25850d37de5d8bc4c1d12263a0d5f0d",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Request accepted successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/swap-accept/{id}": {
            "get": {
                "tags": [
                    "Swaps Initiate"
                ],
                "summary": "Swp Request accepted by message request",
                "description": "Accept Swap.",
                "operationId": "a1c186c83a3b1b0f428349ee0794b994",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Request accepted successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/swap-request-details": {
            "get": {
                "tags": [
                    "Swap Request Details"
                ],
                "summary": "Swap Request Details List.",
                "operationId": "fd8a160472b66a4c858f554e00a5cad4",
                "parameters": [
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Swap Request Details"
                ],
                "summary": "Create a new swap request details",
                "description": "Create Swap Request Details.",
                "operationId": "e8d6ba99d6c18c20581987fc8c636c1e",
                "parameters": [
                    {
                        "name": "swap_id",
                        "in": "query",
                        "description": "Swap ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    },
                    {
                        "name": "product_variation_id",
                        "in": "query",
                        "description": "Product Variation ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 4
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Quantity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "unit_price",
                        "in": "query",
                        "description": "Unit Price",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 10.5
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 52.5
                        }
                    },
                    {
                        "name": "commission",
                        "in": "query",
                        "description": "Commission",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 5.25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Swap Request Details created successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/swap-request-details/{id}": {
            "get": {
                "tags": [
                    "Swap Request Details"
                ],
                "summary": "Retrieve a specific swap request detail.",
                "operationId": "8f45b80b8677d7e9cdef33fba311aedf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get single swap by swap request details id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Get swap request details."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Swap request details not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Swap request details not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Swap Request Details"
                ],
                "summary": "Update swap request details",
                "description": "Update Swap Request Details.",
                "operationId": "6341bf5cd1568572d4ddc16ac372bb80",
                "parameters": [
                    {
                        "name": "swap_id",
                        "in": "query",
                        "description": "Swap ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    },
                    {
                        "name": "product_variation_id",
                        "in": "query",
                        "description": "Product Variation ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 4
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Quantity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "unit_price",
                        "in": "query",
                        "description": "Unit Price",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 10.5
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 52.5
                        }
                    },
                    {
                        "name": "commission",
                        "in": "query",
                        "description": "Commission",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 5.25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Swap Request Details updated successfully."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "The given data was invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Swap Request Details"
                ],
                "summary": "Delete Swap Request Details.",
                "operationId": "230edc5c4976704500c55a049b716731",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Delete a swap request details by ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Swap request details and related data deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Swap request details not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/swap-request-details/{id}/edit": {
            "get": {
                "tags": [
                    "Swap Request Details"
                ],
                "summary": "Edit a specific swap request detail.",
                "operationId": "68f447161550907a5c9f2835b3033c27",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get single swap by swap request details id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Get swap request  details."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Swap request details not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Swap request details not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/user": {
            "get": {
                "tags": [
                    "Admin User"
                ],
                "summary": "User List.",
                "operationId": "49e2261e269919a3abba12b08a8c2bd5",
                "parameters": [
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc/desc"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Imtiaz Ur Rahman Khan"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc,desc"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "json",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/admin/user/destroy/{id}": {
            "delete": {
                "tags": [
                    "Admin User"
                ],
                "summary": "Admin Delete.",
                "operationId": "e4ada1c7ff9476d5b24ba711e0a8a8b9",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "json",
                                            "example": "User Deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "json",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/user-list": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User List.",
                "operationId": "3e00f7929f707b2dbfb8553cf0f78889",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Imtiaz Ur Rahman"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc,desc"
                    },
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/user-inventory/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User Inventory List.",
                "operationId": "b84a0cf3aa441e91631d56545ceca836",
                "parameters": [
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "1"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Product name"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc,desc"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/user-store/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User store List.",
                "operationId": "d534ca7ec1e1058900bc43e83f0bd52e",
                "parameters": [
                    {
                        "name": "pagination",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "product name"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "asc,desc"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/user-profile": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User Profile.",
                "operationId": "1d381745bb367a1879e4f98aa05e6b75",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/update-profile/{id}": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User update profile.",
                "operationId": "ad5b4db3132c00564bd7eede30c3e23a",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Imtiaz"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Khan"
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Khan"
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "file"
                        },
                        "example": "file"
                    },
                    {
                        "name": "resale_license",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "file"
                        },
                        "example": "file"
                    },
                    {
                        "name": "photo_of_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "file"
                        },
                        "example": "file"
                    },
                    {
                        "name": "photo_of_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "file"
                        },
                        "example": "file"
                    },
                    {
                        "name": "business_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Business name"
                    },
                    {
                        "name": "business_address",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Business address"
                    },
                    {
                        "name": "online_store_url",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "http://127.0.0.1:8000/api/documentation#/User/ad5b4db3132c00564bd7eede30c3e23a"
                    },
                    {
                        "name": "ein",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ein"
                    },
                    {
                        "name": "about_me",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "this is a description about me"
                    },
                    {
                        "name": "get_all",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "links": {
                                            "type": "json",
                                            "example": []
                                        },
                                        "meta": {
                                            "type": "json",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "errors": {
                                            "type": "json",
                                            "example": {
                                                "message": [
                                                    "Unauthenticated"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/admin/approved-user/{id}": {
            "get": {
                "tags": [
                    "Admin User"
                ],
                "summary": "Admin Approve.",
                "operationId": "074584e49dd154f641e36ac6e971a7b4",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "json",
                                            "example": "User Update successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "json",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        }
    }
}